/*
System approach Vol. 3 // Dated: 04/06/21
Attempting strplit usage after Nick pointed me towards it
*/

////////////////////////////////////////////////////////////////////////////////

/* alternative for larger file sets
//reading in table functions (from pg 380 of manual)
function (i)readIntTable(s$ path)
{
	if (!fileExists(path))
		stop("readIntTable(): File not found at path " + path);
	l = readFile(path);
	m = sapply(l, "asInteger(strsplit(applyValue));", simplify="matrix");
	return t(m);
}
*/

//initialize segment
initialize() {
	////////////////// STRUCTURE STUFF ////////////////////
	initializeSLiMOptions(keepPedigrees=T);
	initializeMutationRate(1e-7);


	//Mutation Types
	//neutral
	initializeMutationType("m1", 0.5, "f", 0.0);
	//deleterious
	initializeMutationType("m2", 0.5, "g", -0.2, 0.2); //updated according to manual
	m2.convertToSubstitution = T;
	m2.color = "red";


	//Genomic Element Types
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElementType("g2", c(m1,m2), c(0.5, 0.5)); //Abeta

	//Genomic Structures
	initializeGenomicElement(g1, 0, 49999);
	initializeGenomicElement(g2, 50000, 99999);

	//Recombination Rate
	initializeRecombinationRate(1e-8);
	/////////////////////////////////////////////////////


//define population
1 {
	sim.addSubpop("p1", 5);
}

/* commented out for the sake of trying strplit stuff
early() {
	for (ind in sim.subpopulations.individuals) {
		//Node A, alpha value
		AAD = ind.sumOfMutationsOfType(m2);
		ind.setValue("aad", AAD);
	}

	inds = sim.subpopulations.individuals;
	luna = c(inds.getValue("aad"));
	freya = inds.genomes.mutationsOfType(m2);
	print(freya);
	sylvia = matrix(luna, ncol = 1);
	print(sylvia); //lets check what this puts output

	/*if the above works
	bygate = cbind(freya, sylvia);
	print(bygate);
	*/

}
*/
///////// File manipulation /////////

2 early() {
getwd();
}

5 early(){
	IDS = readFile("~/Desktop/test.txt");
	IDS = asFloat(strsplit(IDS));
	print("These are your individuals here:");
	print(IDS);
	val = isFloat(IDS);
	print("TRUE OR FALSE that we all  FLOAT down here?:" + val);

	Selection = readFile("~/Desktop/test2.txt");
	Selection = asFloat(strsplit(Selection));
	print("These are your selection coeffs here:");
	print(Selection);
	luna = isFloat(IDS);
	print("TRUE OR FALSE that we ALSO FLOAT down here?:" + luna);

	freya = cbind(IDS, Selection);
	print(freya);

	//the only thing missing: cbinding these to individuals and object related params
}

//end code
100 late() { sim.outputFixedMutations(); }
